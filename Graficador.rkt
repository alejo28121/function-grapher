#lang racket
(require graphics/graphics)
(open-graphics)
(define (Main)
    (define Board (open-viewport "Funcion grafica" 700 700))
    (define (ReadFuntion)
        (printf "Por favor ingrese la funcion racional a graficar: ")
        (define value (read))
        (if (equal? (~a (string-ref value 0)) "X")
            (string-append "+" value)
            value
        )
    )
    (struct elements (coefficient potency))
    (struct points  (coordinateY coordinateX))
    (define funtion (ReadFuntion))
    (printf "Por favor ingrese el rango:\n")
    (printf "Inicio del rango: ")
    (define initRange (read))
    (printf "Fin del rango: ")
    (define endRange (read))
    (printf "Ingrese el incremento entre puntos: ")
    (define increment (read))
    (define (Graphic table)
        (define tableDate table)
        (define (SearchElements counter prePos tab)
            (define (SearchExpt count preCount)
                (if (equal? (~a (string-ref funtion count)) "(")
                    (SearchExpt (+ count 2) (+ count 1))
                    (if (< count (string-length funtion))
                        (if (and (= count preCount) (or (equal? (~a (string-ref funtion count)) "+") (equal? (~a (string-ref funtion count)) "X") (equal? (~a (string-ref funtion count)) "-")))
                            "1"
                            (if (or (equal? (~a (string-ref funtion count)) "+") (equal? (~a (string-ref funtion count)) ")") (equal? (~a (string-ref funtion count)) "X") (equal? (~a (string-ref funtion count)) "-"))
                                (substring funtion preCount count)
                                (SearchExpt (+ count 1) preCount)
                            )
                        )
                        (void)
                    )
                )
            )   
            (define (ShowTable count)
                (if (< count (vector-length tab))
                    (begin
                        (printf "~a, ~a\n" (elements-coefficient (vector-ref tab count)) (elements-potency (vector-ref tab count)))
                        (ShowTable (+ count 1))
                    )
                    (CalculatePoints tab (vector) initRange)
                )
            )
            (if (< counter (string-length funtion)) 
                (if (and (> counter prePos) (or (equal? (~a (string-ref funtion counter)) "+") (equal? (~a (string-ref funtion counter)) "X") (equal? (~a (string-ref funtion counter)) "-")))
                    (if (or (equal? (~a (string-ref funtion (- counter 1))) "+") (equal? (~a (string-ref funtion (- counter 1))) "-"))
                        (if (equal? (SearchExpt (+ 1 counter) (+ 1 counter)) "1")
                            (SearchElements (+ 1 counter) (+ 1 counter) (vector-append tab (vector (elements (string->number (string-append (~a (string-ref funtion (- counter 1))) "1")) (SearchExpt (+ 1 counter) (+ 1 counter))))))
                            (SearchElements (+ (+ 1 (string-length (SearchExpt (+ 1 counter) (+ 1 counter)))) counter) (+ (+ 1 (string-length (SearchExpt (+ 1 counter) (+ 1 counter)))) counter) (vector-append tab (vector (elements (string->number "1") (string->number (SearchExpt (+ 1 counter) (+ 1 counter)))))))
                        )
                        (if (equal? (~a (string-ref funtion counter)) "X")
                            (if (equal? (SearchExpt (+ 1 counter) (+ 1 counter)) "1")
                                (SearchElements (+ 1 counter) (+ 1 counter) (vector-append tab (vector (elements (string->number (substring funtion prePos counter)) (string->number (SearchExpt (+ 1 counter) (+ 1 counter)))))))
                                (SearchElements (+ (+ 1 (string-length (SearchExpt (+ 1 counter) (+ 1 counter)))) counter) (+ (+ 1 (string-length (SearchExpt (+ 1 counter) (+ 1 counter)))) counter) (vector-append tab (vector (elements (string->number (substring funtion prePos counter)) (string->number (SearchExpt (+ 1 counter) (+ 1 counter)))))))
                            )
                            (SearchElements counter counter (vector-append tab (vector (elements (string->number (substring funtion prePos counter)) 0))))
                        )
                    )
                    (if (< counter (- (string-length funtion) 1))
                        (if (equal? (~a (string-ref funtion (+ counter 1))) ")")
                            (SearchElements (+ counter 2) (+ counter 2) tab)
                            (SearchElements (+ counter 1) prePos tab)
                        )
                        (SearchElements (+ 1 counter) counter (vector-append tab (vector (elements (string->number (substring funtion prePos)) 0))))
                    )
                )
                (ShowTable 0)
            )
        )
        (SearchElements 0 0 tableDate)
    )
    (define (CalculatePoints tableElements table counterY)
        (define (CalculateX counter preValue)
            (if (< counter (vector-length tableElements))
                (if (positive? (elements-coefficient (vector-ref tableElements counter)))
                    (CalculateX (+ counter 1) (+ preValue (* (elements-coefficient (vector-ref tableElements counter)) (expt counterY (elements-potency (vector-ref tableElements counter))))))
                    (CalculateX (+ counter 1) (- preValue (* (elements-coefficient (vector-ref tableElements counter)) (expt counterY (elements-potency (vector-ref tableElements counter))))))
                )
                preValue
            )
        )
        (define (ShowTable count)
            (if (< count (vector-length table))
                (begin
                    (printf "~a, ~a\n" (points-coordinateY (vector-ref table count)) (points-coordinateX (vector-ref table count)))
                    (ShowTable (+ count 1))
                )
                (void)
            )
        )
        (if (<= counterY endRange)
            (CalculatePoints tableElements (vector-append table (vector (points counterY (CalculateX 0 0)))) (+ counterY increment))
            (ShowTable 0)
        )
    )
    (Graphic (vector))
)
(Main)